{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/index.jsx\";\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport EventsResults from './EventsResults'; // https://react-day-picker.js.org/examples/selected-range-enter\n\nvar propTypes = {\n  dateLabel: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  locationLabel: PropTypes.string,\n  searchButtonText: PropTypes.string\n};\nvar defaultProps = {\n  dateLabel: 'When',\n  eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/search/?',\n  locationLabel: 'City',\n  searchButtonText: 'Search'\n};\n\nvar EventSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventSearch, _Component);\n\n  function EventSearch(props) {\n    var _this;\n\n    _classCallCheck(this, EventSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectingFirstDay\", function (from, to, day) {\n      var isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n      var isRangeSelected = from && to;\n      return !from || isBeforeFirstDay || isRangeSelected;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDayClick\", function (day) {\n      var _this$state = _this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (from && to && day >= from && day <= to) {\n        _this.handleResetClick();\n\n        return;\n      }\n\n      if (_this.handleSelectingFirstDay(from, to, day)) {\n        _this.setState({\n          from: day,\n          to: null,\n          enteredTo: null\n        });\n      } else {\n        _this.setState({\n          to: day,\n          enteredTo: day,\n          selectedDates: \"\".concat(moment(from).format('DD/MM/YYYY'), \" - \").concat(moment(day).format('DD/MM/YYYY'))\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDayMouseEnter\", function (day) {\n      var _this$state2 = _this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n\n      if (!_this.handleSelectingFirstDay(from, to, day)) {\n        _this.setState({\n          enteredTo: day\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResetClick\", function () {\n      var _this$state3 = _this.state,\n          enteredTo = _this$state3.enteredTo,\n          to = _this$state3.to,\n          from = _this$state3.from;\n\n      _this.setState({\n        enteredTo: null,\n        from: null,\n        to: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDatePicker\", function () {\n      var activeDatePicker = _this.state.activeDatePicker;\n\n      _this.setState({\n        activeDatePicker: !activeDatePicker\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseDatePicker\", function () {\n      _this.setState({\n        activeDatePicker: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocationChange\", function (locationValue) {\n      _this.setState({\n        locationValue: locationValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocationSelect\", function (locationValue) {\n      var latLng = _this.state.latLng;\n      geocodeByAddress(locationValue).then(function (results) {\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        console.log('Success', latLng), _this.setState({\n          latLng: latLng\n        });\n      })[\"catch\"](function (error) {\n        return console.error('Error', error);\n      });\n\n      _this.setState({\n        locationValue: locationValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchEvents\", function () {\n      var _this$state4 = _this.state,\n          from = _this$state4.from,\n          enteredTo = _this$state4.enteredTo,\n          events = _this$state4.events,\n          latLng = _this$state4.latLng;\n      var _this$props = _this.props,\n          eventbriteApiKey = _this$props.eventbriteApiKey,\n          eventbriteLink = _this$props.eventbriteLink;\n      var fromDate = moment(from).format('YYYY-MM-DD');\n      var searchFromDate = \"\".concat(fromDate, \"T00:00:01Z\");\n      var toDate = moment(enteredTo).format('YYYY-MM-DD');\n      var searchToDate = \"\".concat(toDate, \"T00:00:01Z\");\n      fetch(\"\".concat(eventbriteLink, \"start_date.range_start=\").concat(searchFromDate, \"&start_date.range_end=\").concat(searchToDate, \"&location.longitude=\").concat(latLng.lng, \"&location.latitude=\").concat(latLng.lat, \"&categories=107&token=\").concat(eventbriteApiKey)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          events: data.events\n        });\n      })[\"catch\"](function (error) {\n        return console.log('Error', error);\n      });\n    });\n\n    _this.state = {\n      activeDatePicker: false,\n      city: '',\n      events: [],\n      locationValue: '',\n      enteredTo: null,\n      from: null,\n      latLng: null,\n      selectedDates: 'Anytime',\n      to: null\n    };\n    return _this;\n  }\n\n  _createClass(EventSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          dateLabel = _this$props2.dateLabel,\n          locationLabel = _this$props2.locationLabel,\n          searchButtonText = _this$props2.searchButtonText;\n      var _this$state5 = this.state,\n          activeDatePicker = _this$state5.activeDatePicker,\n          enteredTo = _this$state5.enteredTo,\n          events = _this$state5.events,\n          from = _this$state5.from,\n          locationValue = _this$state5.locationValue,\n          selectedDates = _this$state5.selectedDates,\n          to = _this$state5.to;\n      var modifiers = {\n        start: from,\n        end: enteredTo\n      };\n      var disabledDays = {\n        before: from\n      };\n      var selectedDays = [from, {\n        from: from,\n        to: enteredTo\n      }];\n      return React.createElement(\"div\", {\n        className: \"EventSearch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_searchFilter\",\n        onClick: this.handleDatePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, dateLabel), React.createElement(\"div\", {\n        className: \"EventSearch_value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, selectedDates)), React.createElement(\"div\", {\n        className: activeDatePicker ? 'EventSearch_datePicker EventSearch_datePicker-active' : 'EventSearch_datePicker',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(DayPicker, {\n        className: \"EventSearch_date\",\n        numberOfMonths: 2,\n        fromMonth: from,\n        selectedDays: selectedDays,\n        disabledDays: disabledDays,\n        modifiers: modifiers,\n        onDayClick: this.handleDayClick,\n        onDayMouseEnter: this.handleDayMouseEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"EventSearch_searchFilter\",\n        onClick: this.handleCloseDatePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, locationLabel), React.createElement(PlacesAutocomplete, {\n        value: locationValue,\n        onChange: this.handleLocationChange,\n        onSelect: this.handleLocationSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"input\", _extends({}, getInputProps({\n          placeholder: 'Anywhere',\n          className: 'EventSearch_value'\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"EventSearch_locationContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \" Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'EventSearch_suggestion EventSearch_suggestion-active' : 'EventSearch_suggestion';\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return React.createElement(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, suggestion.description));\n        })));\n      })), React.createElement(\"div\", {\n        className: \"EventSearch_action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"Button EventSearch_button\",\n        onClick: this.handleSearchEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, searchButtonText)))), React.createElement(\"div\", {\n        className: \"EventSearch_resultsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, events.length === 0 && React.createElement(\"h2\", {\n        className: \"EventSearch_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Heading + Paragraph\"), events.length > 0 && React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        className: \"eventSearch_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Wellness Events in \".concat(locationValue)), React.createElement(EventsResults, {\n        items: events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return EventSearch;\n}(Component);\n\nEventSearch.propTypes = propTypes;\nEventSearch.defaultProps = defaultProps;\nexport default EventSearch;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/index.jsx"],"names":["exact","PropTypes","React","Component","DayPicker","DateUtils","moment","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","EventsResults","propTypes","dateLabel","string","eventbriteApiKey","eventbriteLink","locationLabel","searchButtonText","defaultProps","EventSearch","props","from","to","day","isBeforeFirstDay","isDayBefore","isRangeSelected","state","handleResetClick","handleSelectingFirstDay","setState","enteredTo","selectedDates","format","activeDatePicker","locationValue","latLng","then","results","console","log","error","events","fromDate","searchFromDate","toDate","searchToDate","fetch","lng","lat","response","json","data","city","modifiers","start","end","disabledDays","before","selectedDays","handleDatePicker","handleDayClick","handleDayMouseEnter","handleCloseDatePicker","handleLocationChange","handleLocationSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","handleSearchEvents","length"],"mappings":"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","sourcesContent":["import exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\n\nimport EventsResults from './EventsResults';\n\n// https://react-day-picker.js.org/examples/selected-range-enter\nconst propTypes = {\n  dateLabel: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  locationLabel: PropTypes.string,\n  searchButtonText: PropTypes.string,\n}\n\nconst defaultProps = {\n  dateLabel: 'When',\n  eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/search/?',\n  locationLabel: 'City',\n  searchButtonText: 'Search',\n\n}\n\nclass EventSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeDatePicker: false,\n      city: '',\n      events: [],\n      locationValue: '',\n      enteredTo: null,\n      from: null,\n      latLng: null,\n      selectedDates: 'Anytime',\n      to: null,\n    }\n  }\n\n  handleSelectingFirstDay = (from, to, day) => {\n    const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n    const isRangeSelected = from && to;\n    return !from || isBeforeFirstDay || isRangeSelected;\n  }\n\n\n  handleDayClick = (day) => {\n    const { from, to } = this.state;\n    if (from && to && day >= from && day <= to) {\n      this.handleResetClick();\n      return;\n    }\n    if (this.handleSelectingFirstDay(from, to, day)) {\n      this.setState({\n        from: day,\n        to: null,\n        enteredTo: null,\n      });\n    } else {\n      this.setState({\n        to: day,\n        enteredTo: day,\n        selectedDates: `${moment(from).format('DD/MM/YYYY')} - ${moment(day).format('DD/MM/YYYY')}`,\n      });\n    }\n  }\n\n\n  handleDayMouseEnter = (day) => {\n    let  { from, to } = this.state;\n    if (!this.handleSelectingFirstDay(from, to, day)) {\n      this.setState({\n        enteredTo: day,\n      });\n    }\n  }\n\n\n  handleResetClick = () => {\n    const { enteredTo, to, from } = this.state;\n    this.setState({\n      enteredTo: null,\n      from: null,\n      to: null,\n    });\n  }\n \n\n  handleDatePicker = () => {\n    const { activeDatePicker } = this.state;\n\n    this.setState({ activeDatePicker: !activeDatePicker})\n  }\n\n\n  handleCloseDatePicker = () => {\n    this.setState({ activeDatePicker: false });\n  }\n\n\n  handleLocationChange = (locationValue) => {\n    this.setState({ locationValue });\n  };\n \n\n  handleLocationSelect = (locationValue) => {\n    let { latLng } = this.state;\n\n    geocodeByAddress(locationValue)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        console.log('Success', latLng),\n        this.setState({latLng})\n      })\n      .catch(error => console.error('Error', error));\n      this.setState({ locationValue});\n  };\n\n  handleSearchEvents = () => {\n    const { from, enteredTo, events, latLng } = this.state;\n    const { eventbriteApiKey, eventbriteLink } = this.props;\n    \n    const fromDate = moment(from).format('YYYY-MM-DD');\n    const searchFromDate = `${fromDate}T00:00:01Z`;\n\n    const toDate = moment(enteredTo).format('YYYY-MM-DD');\n    const searchToDate = `${toDate}T00:00:01Z`;\n\n    fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&start_date.range_end=${searchToDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=107&token=${eventbriteApiKey}`)\n    .then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({events: data.events})\n    })\n    .catch(error => console.log('Error', error));\n  }\n\n\n  render() {\n    const { dateLabel, locationLabel, searchButtonText } = this.props;\n    const { activeDatePicker, enteredTo, events, from, locationValue, selectedDates, to } = this.state;\n    const modifiers = { start: from, end: enteredTo };\n    const disabledDays = { before: from };\n    const selectedDays = [from, { from, to: enteredTo }];\n\n    return (\n      <div className=\"EventSearch\">\n        <div className=\"EventSearch_container\">\n          <div className=\"EventSearch_searchBar\">\n            <div className=\"EventSearch_searchFilter\" onClick={this.handleDatePicker}>\n              <div className=\"EventSearch_label\">\n                {dateLabel}\n              </div>\n              <div className=\"EventSearch_value\">\n                {selectedDates}\n              </div>\n            </div>\n            <div className={activeDatePicker ? 'EventSearch_datePicker EventSearch_datePicker-active' : 'EventSearch_datePicker'}>\n              <DayPicker\n                className=\"EventSearch_date\"\n                numberOfMonths={2}\n                fromMonth={from}\n                selectedDays={selectedDays}\n                disabledDays={disabledDays}\n                modifiers={modifiers}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n              />\n            </div>\n           \n            <div className=\"EventSearch_searchFilter\" onClick={this.handleCloseDatePicker}>\n              <div className=\"EventSearch_label\">\n                {locationLabel}\n              </div>\n\n                <PlacesAutocomplete\n                  value={locationValue}\n                  onChange={this.handleLocationChange}\n                  onSelect={this.handleLocationSelect}\n                >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  <div>\n                    <input\n                      {...getInputProps({\n                        placeholder: 'Anywhere',\n                        className: 'EventSearch_value',\n                      })}\n                    />\n                    <div className=\"EventSearch_locationContainer\">\n                      {loading && <div> Loading...</div>}\n                      {suggestions.map(suggestion => {\n                        const className = suggestion.active ? 'EventSearch_suggestion EventSearch_suggestion-active' : 'EventSearch_suggestion';\n                        const style = suggestion.active ? { backgroundColor: '#fafafa', cursor: 'pointer' } : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {className, style})}\n                          >\n                            <span>\n                              {suggestion.description}\n                            </span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n                </PlacesAutocomplete>\n            </div>\n            <div className=\"EventSearch_action\">\n              <button type=\"button\" className=\"Button EventSearch_button\" onClick={this.handleSearchEvents}>\n                {searchButtonText}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"EventSearch_resultsContainer\">\n          <>\n            {events.length === 0\n              && \n              (\n                <h2 className=\"EventSearch_title\">\n                  Heading + Paragraph\n                </h2>\n              )\n            }\n            {events.length > 0\n              && (\n                  <>\n                    <h2 className=\"eventSearch_title\">\n                      {`Wellness Events in ${locationValue}`}\n                    </h2>\n                    <EventsResults\n                      items={events}\n                    />\n                  </>\n              )\n            }\n          </>\n        </div>\n      </div>\n    )\n  }\n}\n\nEventSearch.propTypes = propTypes;\nEventSearch.defaultProps = defaultProps;\n\nexport default EventSearch;"]},"metadata":{},"sourceType":"module"}