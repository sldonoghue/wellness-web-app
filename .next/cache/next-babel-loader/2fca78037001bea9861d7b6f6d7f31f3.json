{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport EventsResults from './EventsResults';\nimport { runInThisContext } from 'vm'; // https://react-day-picker.js.org/examples/selected-range-enter\n\nvar propTypes = {\n  dateLabel: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  locationLabel: PropTypes.string,\n  paragraph: PropTypes.string,\n  searchButtonText: PropTypes.string,\n  title: PropTypes.string\n};\nvar defaultProps = {\n  dateLabel: 'When',\n  eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/search/?',\n  locationLabel: 'City',\n  paragraph: 'Use the search bar above to find your ideal wellness event.',\n  searchButtonText: 'Search',\n  title: 'Event Search Page'\n};\n\nvar EventSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventSearch, _Component);\n\n  function EventSearch(props) {\n    var _this;\n\n    _classCallCheck(this, EventSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectingFirstDay\", function (from, to, day) {\n      var isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n      var isRangeSelected = from && to;\n      return !from || isBeforeFirstDay || isRangeSelected;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDayClick\", function (day) {\n      var _this$state = _this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (from && to && day >= from && day <= to) {\n        _this.handleResetClick();\n\n        return;\n      }\n\n      if (_this.handleSelectingFirstDay(from, to, day)) {\n        _this.setState({\n          from: day,\n          to: null,\n          enteredTo: null\n        });\n      } else {\n        _this.setState({\n          to: day,\n          enteredTo: day,\n          selectedDates: \"\".concat(moment(from).format('DD/MM/YYYY'), \" - \").concat(moment(day).format('DD/MM/YYYY'))\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDayMouseEnter\", function (day) {\n      var _this$state2 = _this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n\n      if (!_this.handleSelectingFirstDay(from, to, day)) {\n        _this.setState({\n          enteredTo: day\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResetClick\", function () {\n      var _this$state3 = _this.state,\n          enteredTo = _this$state3.enteredTo,\n          to = _this$state3.to,\n          from = _this$state3.from;\n\n      _this.setState({\n        enteredTo: null,\n        from: null,\n        to: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDatePicker\", function () {\n      var activeDatePicker = _this.state.activeDatePicker;\n\n      _this.setState({\n        activeDatePicker: !activeDatePicker\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseDatePicker\", function () {\n      _this.setState({\n        activeDatePicker: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocationChange\", function (locationValue) {\n      _this.setState({\n        locationValue: locationValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocationSelect\", function (locationValue) {\n      var latLng = _this.state.latLng;\n      geocodeByAddress(locationValue).then(function (results) {\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        _this.setState({\n          latLng: latLng\n        });\n      })[\"catch\"](function (error) {\n        return console.error('Error', error);\n      });\n\n      _this.setState({\n        locationValue: locationValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchEvents\", function () {\n      var _this$state4 = _this.state,\n          from = _this$state4.from,\n          enteredTo = _this$state4.enteredTo,\n          events = _this$state4.events,\n          locationValue = _this$state4.locationValue,\n          latLng = _this$state4.latLng;\n      var _this$props = _this.props,\n          eventbriteApiKey = _this$props.eventbriteApiKey,\n          eventbriteLink = _this$props.eventbriteLink;\n      if (!locationValue) return _this.setState({\n        requiredMessage: 'Please enter a location'\n      });\n\n      _this.setState({\n        loading: true\n      });\n\n      if (locationValue && from) {\n        _this.setState({\n          requiredMessage: ''\n        });\n\n        var fromDate = moment(from).format('YYYY-MM-DD');\n        var searchFromDate = \"\".concat(fromDate, \"T00:00:01Z\");\n        var toDate = moment(enteredTo).format('YYYY-MM-DD');\n        var searchToDate = \"\".concat(toDate, \"T00:00:01Z\");\n        fetch(\"\".concat(eventbriteLink, \"start_date.range_start=\").concat(searchFromDate, \"&start_date.range_end=\").concat(searchToDate, \"&location.longitude=\").concat(latLng.lng, \"&location.latitude=\").concat(latLng.lat, \"&categories=108&token=\").concat(eventbriteApiKey)).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this.setState({\n            events: data.events,\n            eventsFilterCopy: data.events,\n            loading: false,\n            selectedFilter: 'All'\n          });\n        })[\"catch\"](function (error) {\n          return console.log('Error', error);\n        });\n      }\n\n      if (locationValue && !from) {\n        var currentDate = moment().format('YYYY-MM-DD');\n\n        var _searchFromDate = \"\".concat(currentDate, \"T00:00:01Z\");\n\n        fetch(\"\".concat(eventbriteLink, \"start_date.range_start=\").concat(_searchFromDate, \"&location.longitude=\").concat(latLng.lng, \"&location.latitude=\").concat(latLng.lat, \"&categories=108&token=\").concat(eventbriteApiKey)).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this.setState({\n            events: data.events\n          });\n        })[\"catch\"](function (error) {\n          return console.log('Error', error);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilter\", function (event) {\n      var _this$state5 = _this.state,\n          events = _this$state5.events,\n          eventsFilterCopy = _this$state5.eventsFilterCopy,\n          selectedFilter = _this$state5.selectedFilter;\n      var selected = event.currentTarget.value;\n      var totalEvents = eventsFilterCopy;\n\n      if (selected === 'All') {\n        _this.setState({\n          events: eventsFilterCopy\n        });\n      }\n\n      if (selected === 'Free') {\n        var filteredFreeEvents = [];\n        totalEvents.forEach(function (event) {\n          if (event.is_free === true) {\n            filteredFreeEvents.push(event);\n          }\n        });\n\n        _this.setState({\n          events: filteredFreeEvents,\n          selectedFilter: selected\n        });\n      }\n\n      if (selected === '£££') {\n        var filteredPaidEvents = [];\n        totalEvents.forEach(function (event) {\n          if (event.is_free === false) {\n            filteredPaidEvents.push(event);\n          }\n        });\n\n        _this.setState({\n          events: filteredPaidEvents,\n          selectedFilter: selected\n        });\n      }\n    });\n\n    _this.state = {\n      activeDatePicker: false,\n      city: '',\n      events: [],\n      eventsFilterCopy: [],\n      locationValue: '',\n      enteredTo: null,\n      from: null,\n      latLng: null,\n      loading: false,\n      selectedDates: 'Anytime',\n      selectedFilter: 'All',\n      to: null\n    };\n    return _this;\n  }\n\n  _createClass(EventSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          dateLabel = _this$props2.dateLabel,\n          locationLabel = _this$props2.locationLabel,\n          paragraph = _this$props2.paragraph,\n          searchButtonText = _this$props2.searchButtonText,\n          title = _this$props2.title;\n      var _this$state6 = this.state,\n          activeDatePicker = _this$state6.activeDatePicker,\n          enteredTo = _this$state6.enteredTo,\n          events = _this$state6.events,\n          from = _this$state6.from,\n          locationValue = _this$state6.locationValue,\n          loading = _this$state6.loading,\n          requiredMessage = _this$state6.requiredMessage,\n          selectedDates = _this$state6.selectedDates,\n          to = _this$state6.to,\n          visibleItems = _this$state6.visibleItems;\n      var modifiers = {\n        start: from,\n        end: enteredTo\n      };\n      var disabledDays = {\n        before: from\n      };\n      var selectedDays = [from, {\n        from: from,\n        to: enteredTo\n      }];\n      var today = new Date();\n      return React.createElement(\"div\", {\n        className: \"EventSearch\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_container\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_searchBar\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_searchFilter\",\n        onClick: this.handleDatePicker\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_label\"\n      }, dateLabel), React.createElement(\"div\", {\n        className: \"EventSearch_value\"\n      }, selectedDates)), React.createElement(\"div\", {\n        className: activeDatePicker ? 'EventSearch_datePicker EventSearch_datePicker-active' : 'EventSearch_datePicker'\n      }, React.createElement(DayPicker, {\n        className: \"EventSearch_date\",\n        numberOfMonths: 2,\n        fromMonth: from,\n        selectedDays: selectedDays,\n        disabledDays: {\n          before: today\n        },\n        modifiers: modifiers,\n        onDayClick: this.handleDayClick,\n        onDayMouseEnter: this.handleDayMouseEnter\n      })), React.createElement(\"div\", {\n        className: \"EventSearch_searchFilter\",\n        onClick: this.handleCloseDatePicker\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_label\"\n      }, locationLabel), React.createElement(PlacesAutocomplete, {\n        value: locationValue,\n        onChange: this.handleLocationChange,\n        onSelect: this.handleLocationSelect\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return React.createElement(\"div\", null, React.createElement(\"input\", getInputProps({\n          placeholder: 'Anywhere',\n          className: 'EventSearch_value'\n        })), React.createElement(\"div\", {\n          className: \"EventSearch_locationContainer\"\n        }, loading && React.createElement(\"div\", null, \" Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'EventSearch_suggestion EventSearch_suggestion-active' : 'EventSearch_suggestion';\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return React.createElement(\"div\", getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), React.createElement(\"span\", null, suggestion.description));\n        })));\n      }), requiredMessage != '' && React.createElement(\"div\", {\n        className: \"EventSearch_required\"\n      }, requiredMessage)), React.createElement(\"div\", {\n        className: \"EventSearch_action\"\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"Button EventSearch_button\",\n        onClick: this.handleSearchEvents\n      }, searchButtonText)))), React.createElement(\"div\", {\n        className: \"EventSearch_resultsContainer\"\n      }, React.createElement(React.Fragment, null, events.length === 0 && !loading && React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        className: \"EventSearch_title\"\n      }, title), React.createElement(\"div\", {\n        className: \"EventSearch_paragraph\"\n      }, paragraph)), loading && React.createElement(\"section\", {\n        className: \"EventSearch_loadingContent\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-title\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loadingCardContent\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_loadingCard\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-image\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-cardTitle\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      })), React.createElement(\"div\", {\n        className: \"EventSearch_loadingCard\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-image\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-cardTitle\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      })), React.createElement(\"div\", {\n        className: \"EventSearch_loadingCard\"\n      }, React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-image\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-cardTitle\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      }), React.createElement(\"div\", {\n        className: \"EventSearch_loading EventSearch_loading-info\"\n      })))), events.length > 0 && !loading && React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        className: \"EventSearch_title\"\n      }, \"Wellness Events in \".concat(locationValue)), React.createElement(\"div\", {\n        className: \"EventSearch_filterContainer\"\n      }, React.createElement(\"select\", {\n        className: \"EventSearch_filter\",\n        value: this.state.selectedFilter,\n        onChange: this.handleFilter\n      }, React.createElement(\"option\", {\n        className: \"EventSearch_option\",\n        value: \"All\"\n      }, \"All\"), React.createElement(\"option\", {\n        className: \"EventSearch_option\",\n        value: \"Free\"\n      }, \"Free\"), React.createElement(\"option\", {\n        className: \"EventSearch_option\",\n        value: \"\\xA3\\xA3\\xA3\"\n      }, \"\\xA3\\xA3\\xA3\"))), React.createElement(EventsResults, {\n        items: events\n      })))));\n    }\n  }]);\n\n  return EventSearch;\n}(Component);\n\nEventSearch.propTypes = propTypes;\nEventSearch.defaultProps = defaultProps;\nexport default EventSearch;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/index.jsx"],"names":["exact","PropTypes","React","Component","DayPicker","DateUtils","moment","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","EventsResults","runInThisContext","propTypes","dateLabel","string","eventbriteApiKey","eventbriteLink","locationLabel","paragraph","searchButtonText","title","defaultProps","EventSearch","props","from","to","day","isBeforeFirstDay","isDayBefore","isRangeSelected","state","handleResetClick","handleSelectingFirstDay","setState","enteredTo","selectedDates","format","activeDatePicker","locationValue","latLng","then","results","error","console","events","requiredMessage","loading","fromDate","searchFromDate","toDate","searchToDate","fetch","lng","lat","response","json","data","eventsFilterCopy","selectedFilter","log","currentDate","event","selected","currentTarget","value","totalEvents","filteredFreeEvents","forEach","is_free","push","filteredPaidEvents","city","visibleItems","modifiers","start","end","disabledDays","before","selectedDays","today","Date","handleDatePicker","handleDayClick","handleDayMouseEnter","handleCloseDatePicker","handleLocationChange","handleLocationSelect","getInputProps","suggestions","getSuggestionItemProps","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","handleSearchEvents","length","handleFilter"],"mappings":"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","sourcesContent":["import exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\n\nimport EventsResults from './EventsResults';\nimport { runInThisContext } from 'vm';\n\n// https://react-day-picker.js.org/examples/selected-range-enter\nconst propTypes = {\n  dateLabel: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  locationLabel: PropTypes.string,\n  paragraph: PropTypes.string,\n  searchButtonText: PropTypes.string,\n  title: PropTypes.string,\n}\n\nconst defaultProps = {\n  dateLabel: 'When',\n  eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/search/?',\n  locationLabel: 'City',\n  paragraph: 'Use the search bar above to find your ideal wellness event.',\n  searchButtonText: 'Search',\n  title: 'Event Search Page',\n}\n\nclass EventSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeDatePicker: false,\n      city: '',\n      events: [],\n      eventsFilterCopy: [],\n      locationValue: '',\n      enteredTo: null,\n      from: null,\n      latLng: null,\n      loading: false,\n      selectedDates: 'Anytime',\n      selectedFilter: 'All',\n      to: null,\n    }\n  }\n\n  handleSelectingFirstDay = (from, to, day) => {\n    const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n    const isRangeSelected = from && to;\n    return !from || isBeforeFirstDay || isRangeSelected;\n  }\n\n\n  handleDayClick = (day) => {\n    const { from, to } = this.state;\n    if (from && to && day >= from && day <= to) {\n      this.handleResetClick();\n      return;\n    }\n    if (this.handleSelectingFirstDay(from, to, day)) {\n      this.setState({\n        from: day,\n        to: null,\n        enteredTo: null,\n      });\n    } else {\n      this.setState({\n        to: day,\n        enteredTo: day,\n        selectedDates: `${moment(from).format('DD/MM/YYYY')} - ${moment(day).format('DD/MM/YYYY')}`,\n      });\n    }\n  }\n\n\n  handleDayMouseEnter = (day) => {\n    let  { from, to } = this.state;\n    if (!this.handleSelectingFirstDay(from, to, day)) {\n      this.setState({\n        enteredTo: day,\n      });\n    }\n  }\n\n\n  handleResetClick = () => {\n    const { enteredTo, to, from } = this.state;\n    this.setState({\n      enteredTo: null,\n      from: null,\n      to: null,\n    });\n  }\n \n\n  handleDatePicker = () => {\n    const { activeDatePicker } = this.state;\n\n    this.setState({ activeDatePicker: !activeDatePicker})\n  }\n\n\n  handleCloseDatePicker = () => {\n    this.setState({ activeDatePicker: false });\n  }\n\n\n  handleLocationChange = (locationValue) => {\n    this.setState({ locationValue });\n  };\n \n\n  handleLocationSelect = (locationValue) => {\n    let { latLng } = this.state;\n\n    geocodeByAddress(locationValue)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        this.setState({latLng})\n      })\n      .catch(error => console.error('Error', error));\n      this.setState({ locationValue});\n  };\n\n\n  handleSearchEvents = () => {\n    const { from, enteredTo, events, locationValue, latLng } = this.state;\n    const { eventbriteApiKey, eventbriteLink } = this.props;\n\n    if (!locationValue) return this.setState({requiredMessage: 'Please enter a location'});\n\n    this.setState({ loading: true })\n\n    if (locationValue && from) {\n      this.setState({requiredMessage: ''});\n\n      const fromDate = moment(from).format('YYYY-MM-DD');\n      const searchFromDate = `${fromDate}T00:00:01Z`;\n\n      const toDate = moment(enteredTo).format('YYYY-MM-DD');\n      const searchToDate = `${toDate}T00:00:01Z`;\n\n      fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&start_date.range_end=${searchToDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=108&token=${eventbriteApiKey}`)\n      .then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          events: data.events,\n          eventsFilterCopy: data.events,\n          loading: false,\n          selectedFilter: 'All'\n        })\n      })\n      .catch(error => console.log('Error', error));\n    }\n\n    if(locationValue && !from) {\n      const currentDate = moment().format('YYYY-MM-DD');\n      const searchFromDate = `${currentDate}T00:00:01Z`;\n\n      fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=108&token=${eventbriteApiKey}`)\n      .then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({events: data.events})\n      })\n      .catch(error => console.log('Error', error));\n    }\n  }\n\n\n  handleFilter = (event) => {\n    let { events, eventsFilterCopy, selectedFilter } = this.state;\n    \n    const selected = event.currentTarget.value;\n    const totalEvents = eventsFilterCopy;\n    \n    if(selected === 'All') {\n      this.setState({events: eventsFilterCopy})\n    }\n   \n    if(selected === 'Free') {\n      let filteredFreeEvents = [];\n\n      totalEvents.forEach((event) => {\n        if(event.is_free === true) {\n          filteredFreeEvents.push(event)\n        }\n      })\n      this.setState({\n        events: filteredFreeEvents,\n        selectedFilter: selected\n      })\n    }\n\n    if(selected === '£££') {\n      let filteredPaidEvents = [];\n\n      totalEvents.forEach((event) => {\n        if(event.is_free === false) {\n          filteredPaidEvents.push(event)\n        }\n      })\n      this.setState({\n        events: filteredPaidEvents,\n        selectedFilter: selected\n      })\n    }\n  }\n\n\n  render() {\n    const { dateLabel, locationLabel, paragraph, searchButtonText, title } = this.props;\n    const { activeDatePicker, enteredTo, events, from, locationValue, loading, requiredMessage, selectedDates, to, visibleItems } = this.state;\n    const modifiers = { start: from, end: enteredTo };\n    const disabledDays = { before: from };\n    const selectedDays = [from, { from, to: enteredTo }];\n    const today = new Date();\n\n    return (\n      <div className=\"EventSearch\">\n        <div className=\"EventSearch_container\">\n          <div className=\"EventSearch_searchBar\">\n            <div className=\"EventSearch_searchFilter\" onClick={this.handleDatePicker}>\n              <div className=\"EventSearch_label\">\n                {dateLabel}\n              </div>\n              <div className=\"EventSearch_value\">\n                {selectedDates}\n              </div>\n            </div>\n            <div className={activeDatePicker ? 'EventSearch_datePicker EventSearch_datePicker-active' : 'EventSearch_datePicker'}>\n              <DayPicker\n                className=\"EventSearch_date\"\n                numberOfMonths={2}\n                fromMonth={from}\n                selectedDays={selectedDays}\n                disabledDays={{before: today}}\n                modifiers={modifiers}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n              />\n            </div>\n           \n            <div className=\"EventSearch_searchFilter\" onClick={this.handleCloseDatePicker}>\n              <div className=\"EventSearch_label\">\n                {locationLabel}\n              </div>\n\n                <PlacesAutocomplete\n                  value={locationValue}\n                  onChange={this.handleLocationChange}\n                  onSelect={this.handleLocationSelect}\n                >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  <div>\n                    <input\n                      {...getInputProps({\n                        placeholder: 'Anywhere',\n                        className: 'EventSearch_value',\n                      })}\n                    />\n                    <div className=\"EventSearch_locationContainer\">\n                      {loading && <div> Loading...</div>}\n                      {suggestions.map(suggestion => {\n                        const className = suggestion.active ? 'EventSearch_suggestion EventSearch_suggestion-active' : 'EventSearch_suggestion';\n                        const style = suggestion.active ? { backgroundColor: '#fafafa', cursor: 'pointer' } : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {className, style})}\n                          >\n                            <span>\n                              {suggestion.description}\n                            </span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n                </PlacesAutocomplete>\n                {requiredMessage != ''\n                  && (\n                    <div className=\"EventSearch_required\">\n                      {requiredMessage}\n                    </div>\n                  )}\n            </div>\n            <div className=\"EventSearch_action\">\n              <button type=\"button\" className=\"Button EventSearch_button\" onClick={this.handleSearchEvents}>\n                {searchButtonText}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"EventSearch_resultsContainer\">\n          <>\n            {(events.length === 0 && !loading)\n              && \n              (\n                <>\n                  <h2 className=\"EventSearch_title\">\n                    {title}\n                  </h2>\n                  <div className=\"EventSearch_paragraph\">\n                    {paragraph}\n                  </div>\n                </>\n              )\n            }\n            {loading\n              && (\n                <section className=\"EventSearch_loadingContent\">\n                  <div className=\"EventSearch_loading EventSearch_loading-title\" />\n\n                  <div className=\"EventSearch_loadingCardContent\">\n                    <div className=\"EventSearch_loadingCard\">\n                      <div className=\"EventSearch_loading EventSearch_loading-image\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-cardTitle\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                    </div>\n                    <div className=\"EventSearch_loadingCard\">\n                      <div className=\"EventSearch_loading EventSearch_loading-image\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-cardTitle\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                    </div>\n                    <div className=\"EventSearch_loadingCard\">\n                      <div className=\"EventSearch_loading EventSearch_loading-image\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-cardTitle\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                    </div>\n                  </div>\n                </section>\n              )\n            }\n            {(events.length > 0 && !loading)\n              && \n                (\n                <>\n                  <h2 className=\"EventSearch_title\">\n                    {`Wellness Events in ${locationValue}`}\n                  </h2>\n                  <div className=\"EventSearch_filterContainer\">\n            \n                      <select className=\"EventSearch_filter\" value={this.state.selectedFilter} onChange={this.handleFilter}>\n                        <option className=\"EventSearch_option\" value='All'>All</option>\n                        <option className=\"EventSearch_option\" value='Free'>Free</option>\n                        <option className=\"EventSearch_option\" value=\"£££\">£££</option>\n                      </select>\n                  \n                  </div>\n                  <EventsResults\n                    items={events}\n                  />\n                </>\n              )\n            }\n          </>\n        </div>\n      </div>\n    )\n  }\n}\n\nEventSearch.propTypes = propTypes;\nEventSearch.defaultProps = defaultProps;\n\nexport default EventSearch;"]},"metadata":{},"sourceType":"module"}