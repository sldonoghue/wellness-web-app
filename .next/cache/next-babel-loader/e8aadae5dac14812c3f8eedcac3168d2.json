{"ast":null,"code":"import classNames from 'classnames';\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport requireIf from 'react-required-if';\nvar propTypes = exact({\n  blockName: PropTypes.string,\n  buttonType: PropTypes.string,\n  elementType: PropTypes.oneOf(['button', 'link']),\n  handleClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  modifier: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  url: requireIf(PropTypes.string, function (props) {\n    return props.elementType === 'link';\n  })\n});\nvar defaultProps = {\n  blockName: null,\n  buttonType: 'button',\n  elementType: 'button',\n  isDisabled: false,\n  isLoading: false,\n  modifier: 'ghost'\n};\n\nfunction Button(props) {\n  var blockName = props.blockName,\n      buttonType = props.buttonType,\n      elementType = props.elementType,\n      handleClick = props.handleClick,\n      isDisabled = props.isDisabled,\n      isLoading = props.isLoading,\n      modifier = props.modifier,\n      text = props.text,\n      url = props.url;\n  var buttonClasses = classNames(blockName, 'Button', \"Button-\".concat(modifier), {\n    disabled: isDisabled,\n    loading: isLoading\n  });\n\n  if (elementType === 'button') {\n    return React.createElement(\"button\", {\n      type: buttonType,\n      onClick: handleClick,\n      className: buttonClasses,\n      disabled: isDisabled\n    }, React.createElement(\"span\", {\n      className: \"Button_text\"\n    }, text), isLoading && React.createElement(\"div\", {\n      className: \"Button_loading\"\n    }, React.createElement(\"div\", {\n      className: \"Button_loadingItem\"\n    }), React.createElement(\"div\", {\n      className: \"Button_loadingItem\"\n    }), React.createElement(\"div\", {\n      className: \"Button_loadingItem\"\n    }), React.createElement(\"div\", {\n      className: \"Button_loadingItem\"\n    })));\n  }\n\n  if (props.elementType === 'link') {\n    return React.createElement(\"a\", {\n      href: url,\n      className: buttonClasses\n    }, React.createElement(\"span\", {\n      className: \"Button_text\"\n    }, text));\n  }\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/Components/Atoms/Button.jsx"],"names":["classNames","exact","PropTypes","React","requireIf","propTypes","blockName","string","buttonType","elementType","oneOf","handleClick","func","isDisabled","bool","isLoading","modifier","text","isRequired","url","props","defaultProps","Button","buttonClasses","disabled","loading"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport requireIf from 'react-required-if';\n\n\nconst propTypes = exact({\n  blockName: PropTypes.string,\n  buttonType: PropTypes.string,\n  elementType: PropTypes.oneOf(['button', 'link']),\n  handleClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  modifier: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  url: requireIf(PropTypes.string, props => props.elementType === 'link'),\n});\n\nconst defaultProps = {\n  blockName: null,\n  buttonType: 'button',\n  elementType: 'button',\n  isDisabled: false,\n  isLoading: false,\n  modifier: 'ghost',\n};\n\n\nfunction Button(props) {\n  const {\n    blockName,\n    buttonType,\n    elementType,\n    handleClick,\n    isDisabled,\n    isLoading,\n    modifier,\n    text,\n    url,\n  } = props;\n\n  const buttonClasses = classNames(\n    blockName,\n    'Button',\n    `Button-${modifier}`,\n    {\n      disabled: isDisabled,\n      loading: isLoading,\n    },\n  );\n\n  if (elementType === 'button') {\n    return (\n      <button\n        type={buttonType}\n        onClick={handleClick}\n        className={buttonClasses}\n        disabled={isDisabled}\n      >\n        <span className=\"Button_text\">\n          {text}\n        </span>\n        {isLoading\n          && (\n            <div className=\"Button_loading\">\n              <div className=\"Button_loadingItem\"></div>\n              <div className=\"Button_loadingItem\"></div>\n              <div className=\"Button_loadingItem\"></div>\n              <div className=\"Button_loadingItem\"></div>\n            </div>\n          )\n        }\n      </button>\n    );\n  }\n\n  if (props.elementType === 'link') {\n    return (\n      <a href={url} className={buttonClasses}>\n        <span className=\"Button_text\">\n          {text}\n        </span>\n      </a>\n    );\n  }\n}\n\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}