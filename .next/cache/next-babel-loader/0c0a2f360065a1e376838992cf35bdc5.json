{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ImageSplit from './ImageSplit';\nimport Inspiration from './Inspiration';\nconst propTypes = exact({\n  accessToken: PropTypes.string,\n  tumblrApi: PropTypes.string,\n  pageTitle: PropTypes.string,\n  subtext: PropTypes.string,\n  title: PropTypes.string\n});\nconst defaultProps = {\n  accessToken: 'Wsd6sfe1uHkckn8sbelD4ws8QCAUxUXAg5GvcAYJowIsW4YpB3',\n  tumblrApi: 'https://api.tumblr.com/v2/tagged?tag=yogi',\n  introText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam enim leo, fringilla non ornare nec, feugiat a mi. Nullam vehicula purus ut tellus semper iaculis. Sed congue ornare justo et porta. Morbi finibus arcu diam, nec porttitor quam interdum vel. Cras ut finibus mauris. Praesent id blandit ex. Aenean finibus consequat erat, a elementum ligula feugiat eu.',\n  pageTitle: 'Page Title',\n  subtext: 'Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet.',\n  title: \"Test Title\"\n};\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getPosts\", () => {\n      const {\n        accessToken,\n        tumblrApi\n      } = this.props;\n      let blogPhotos = [];\n      fetch(`${tumblrApi}&api_key=${accessToken}`).then(response => response.json()).then(data => {\n        let blogs = data.response;\n        blogs.forEach((blog, index) => {\n          if (blog.type === \"photo\") blogPhotos.push(blog);\n        });\n        this.setState({\n          blogPosts: blogPhotos\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleJumpLink\", () => {\n      this.scrollTo.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      }, 0);\n    });\n\n    _defineProperty(this, \"handlePageClick\", () => {\n      debugger;\n    });\n\n    this.scrollTo = React.createRef();\n    this.state = {\n      blogPosts: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  render() {\n    const {\n      introText,\n      pageTitle,\n      subtext,\n      title\n    } = this.props;\n    const {\n      blogPosts\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"Homepage\"\n    }, React.createElement(\"div\", {\n      className: \"Homepage_container\"\n    }, React.createElement(\"div\", {\n      className: \"Homepage_heroImage\"\n    }), React.createElement(\"div\", {\n      className: \"Homepage_content\"\n    }, React.createElement(\"h1\", {\n      className: \"Homepage_bannerTitle\"\n    }, title), React.createElement(\"div\", {\n      className: \"Homepage_subtext\"\n    }, subtext), React.createElement(\"button\", {\n      className: \"Homepage_jumpLink\",\n      onClick: this.handleJumpLink\n    }))), React.createElement(\"div\", {\n      className: \"Homepage_section\",\n      ref: this.scrollTo\n    }, React.createElement(\"div\", {\n      className: \"Homepage_sectionContent\"\n    }, React.createElement(\"h2\", {\n      className: \"Homepage_pageTitle\"\n    }, pageTitle), React.createElement(\"div\", {\n      className: \"Homepage_text\"\n    }, introText)), React.createElement(ImageSplit, {\n      handlePageClick: this.handlePageClick\n    }), React.createElement(Inspiration, {\n      blogPosts: blogPosts,\n      title: \"#Wellness\"\n    })));\n  }\n\n}\n\nHomePage.propTypes = propTypes;\nHomePage.defaultProps = defaultProps;\nexport default HomePage;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/Components/Homepage/index.jsx"],"names":["exact","PropTypes","React","Component","ImageSplit","Inspiration","propTypes","accessToken","string","tumblrApi","pageTitle","subtext","title","defaultProps","introText","HomePage","constructor","props","blogPhotos","fetch","then","response","json","data","blogs","forEach","blog","index","type","push","setState","blogPosts","scrollTo","current","scrollIntoView","behavior","block","createRef","state","componentDidMount","getPosts","render","handleJumpLink","handlePageClick"],"mappings":"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","sourcesContent":["import exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport ImageSplit from './ImageSplit';\nimport Inspiration from './Inspiration';\n\nconst propTypes = exact({\n  accessToken: PropTypes.string,\n  tumblrApi: PropTypes.string,\n  pageTitle: PropTypes.string,\n  subtext: PropTypes.string,\n  title: PropTypes.string,\n})\n\nconst defaultProps = {\n  accessToken: 'Wsd6sfe1uHkckn8sbelD4ws8QCAUxUXAg5GvcAYJowIsW4YpB3',\n  tumblrApi: 'https://api.tumblr.com/v2/tagged?tag=yogi',\n  introText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam enim leo, fringilla non ornare nec, feugiat a mi. Nullam vehicula purus ut tellus semper iaculis. Sed congue ornare justo et porta. Morbi finibus arcu diam, nec porttitor quam interdum vel. Cras ut finibus mauris. Praesent id blandit ex. Aenean finibus consequat erat, a elementum ligula feugiat eu.',\n  pageTitle: 'Page Title',\n  subtext: 'Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet.',\n  title: \"Test Title\",\n}\n\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.scrollTo = React.createRef();\n\n    this.state = {\n      blogPosts: []\n    }\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  getPosts = () => {\n    const { accessToken, tumblrApi } = this.props; \n    let blogPhotos = [];\n\n    fetch(`${tumblrApi}&api_key=${accessToken}`)\n    .then(response => response.json())\n    .then(data => {\n      let blogs = data.response;\n      blogs.forEach((blog, index) => {\n        if (blog.type === \"photo\") blogPhotos.push(blog);\n      })\n      this.setState({ blogPosts: blogPhotos});\n    })\n  }\n\n  handleJumpLink = () => {\n    this.scrollTo.current.scrollIntoView({behavior: 'smooth', block: 'start'}, 0);\n  }\n\n  handlePageClick = () => {\n    debugger\n  }\n\n  render() {\n    const { introText, pageTitle, subtext, title } = this.props;\n    const { blogPosts } = this.state;\n\n    return (\n      <div className=\"Homepage\">\n        <div className=\"Homepage_container\">\n          <div className=\"Homepage_heroImage\" />\n          <div className=\"Homepage_content\">\n            <h1 className=\"Homepage_bannerTitle\">\n              {title}\n            </h1>\n            <div className=\"Homepage_subtext\">\n              {subtext}\n            </div>\n            <button className=\"Homepage_jumpLink\" onClick={this.handleJumpLink} />\n          </div>\n        </div>\n        <div className=\"Homepage_section\" ref={this.scrollTo}>\n          <div className=\"Homepage_sectionContent\">\n            <h2 className=\"Homepage_pageTitle\">\n              {pageTitle}\n            </h2>\n            <div className=\"Homepage_text\">\n              {introText}\n            </div>\n          </div>\n          <ImageSplit \n            handlePageClick={this.handlePageClick}\n          />\n          <Inspiration\n            blogPosts={blogPosts}\n            title='#Wellness'\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nHomePage.propTypes = propTypes;\nHomePage.defaultProps = defaultProps;\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}