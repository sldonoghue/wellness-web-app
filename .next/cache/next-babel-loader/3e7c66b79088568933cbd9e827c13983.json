{"ast":null,"code":"var _jsxFileName = \"/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/Components/Atoms/Button.jsx\";\nimport classNames from 'classnames';\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport requireIf from 'react-required-if';\nvar propTypes = exact({\n  blockName: PropTypes.string,\n  buttonType: PropTypes.string,\n  elementType: PropTypes.oneOf(['button', 'link']),\n  handleClick: requireIf(PropTypes.func, function (props) {\n    return props.elementType === 'button';\n  }),\n  isDisabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  modifier: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  url: requireIf(PropTypes.string, function (props) {\n    return props.elementType === 'link';\n  })\n});\nvar defaultProps = {\n  blockName: null,\n  buttonType: 'button',\n  elementType: 'button',\n  isDisabled: false,\n  isLoading: false,\n  modifier: 'ghost'\n};\n\nfunction Button(props) {\n  var blockName = props.blockName,\n      buttonType = props.buttonType,\n      elementType = props.elementType,\n      handleClick = props.handleClick,\n      isDisabled = props.isDisabled,\n      isLoading = props.isLoading,\n      modifier = props.modifier,\n      text = props.text,\n      url = props.url;\n  var buttonClasses = classNames(blockName, 'Button', \"Button-\".concat(modifier), {\n    disabled: isDisabled,\n    loading: isLoading\n  });\n\n  if (elementType === 'button') {\n    return React.createElement(\"button\", {\n      type: buttonType,\n      onClick: handleClick,\n      className: buttonClasses,\n      disabled: isDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"Button_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, text), isLoading && React.createElement(\"div\", {\n      className: \"Button_loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Button_loadingItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Button_loadingItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Button_loadingItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Button_loadingItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n  if (props.elementType === 'link') {\n    return React.createElement(\"a\", {\n      href: url,\n      className: buttonClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"Button_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, text));\n  }\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/Components/Atoms/Button.jsx"],"names":["classNames","exact","PropTypes","React","requireIf","propTypes","blockName","string","buttonType","elementType","oneOf","handleClick","func","props","isDisabled","bool","isLoading","modifier","text","isRequired","url","defaultProps","Button","buttonClasses","disabled","loading"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport requireIf from 'react-required-if';\n\n\nconst propTypes = exact({\n  blockName: PropTypes.string,\n  buttonType: PropTypes.string,\n  elementType: PropTypes.oneOf(['button', 'link']),\n  handleClick: requireIf(PropTypes.func, props => props.elementType === 'button'),\n  isDisabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  modifier: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  url: requireIf(PropTypes.string, props => props.elementType === 'link'),\n});\n\nconst defaultProps = {\n  blockName: null,\n  buttonType: 'button',\n  elementType: 'button',\n  isDisabled: false,\n  isLoading: false,\n  modifier: 'ghost',\n};\n\n\nfunction Button(props) {\n  const {\n    blockName,\n    buttonType,\n    elementType,\n    handleClick,\n    isDisabled,\n    isLoading,\n    modifier,\n    text,\n    url,\n  } = props;\n\n  const buttonClasses = classNames(\n    blockName,\n    'Button',\n    `Button-${modifier}`,\n    {\n      disabled: isDisabled,\n      loading: isLoading,\n    },\n  );\n\n  if (elementType === 'button') {\n    return (\n      <button\n        type={buttonType}\n        onClick={handleClick}\n        className={buttonClasses}\n        disabled={isDisabled}\n      >\n        <span className=\"Button_text\">\n          {text}\n        </span>\n        {isLoading\n          && (\n            <div className=\"Button_loading\">\n              <div className=\"Button_loadingItem\"></div>\n              <div className=\"Button_loadingItem\"></div>\n              <div className=\"Button_loadingItem\"></div>\n              <div className=\"Button_loadingItem\"></div>\n            </div>\n          )\n        }\n      </button>\n    );\n  }\n\n  if (props.elementType === 'link') {\n    return (\n      <a href={url} className={buttonClasses}>\n        <span className=\"Button_text\">\n          {text}\n        </span>\n      </a>\n    );\n  }\n}\n\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}