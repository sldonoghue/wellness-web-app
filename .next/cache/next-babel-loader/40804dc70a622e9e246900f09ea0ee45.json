{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/index.jsx\";\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport EventsResults from './EventsResults'; // https://react-day-picker.js.org/examples/selected-range-enter\n\nconst propTypes = {\n  dateLabel: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  locationLabel: PropTypes.string,\n  paragraph: PropTypes.string,\n  searchButtonText: PropTypes.string,\n  title: PropTypes.string\n};\nconst defaultProps = {\n  dateLabel: 'When',\n  // eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteApiKey: '34KC3DZI63QGVN6RGLEA',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/search/?',\n  locationLabel: 'City',\n  paragraph: 'Use the search bar above to find your ideal wellness event.',\n  searchButtonText: 'Search',\n  title: 'Event Search Page'\n};\n\nclass EventSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSelectingFirstDay\", (from, to, day) => {\n      const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n      const isRangeSelected = from && to;\n      return !from || isBeforeFirstDay || isRangeSelected;\n    });\n\n    _defineProperty(this, \"handleDayClick\", day => {\n      const {\n        from,\n        to\n      } = this.state;\n\n      if (from && to && day >= from && day <= to) {\n        this.handleResetClick();\n        return;\n      }\n\n      if (this.handleSelectingFirstDay(from, to, day)) {\n        this.setState({\n          from: day,\n          to: null,\n          enteredTo: null\n        });\n      } else {\n        this.setState({\n          to: day,\n          enteredTo: day,\n          selectedDates: `${moment(from).format('DD/MM/YYYY')} - ${moment(day).format('DD/MM/YYYY')}`\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleDayMouseEnter\", day => {\n      let {\n        from,\n        to\n      } = this.state;\n\n      if (!this.handleSelectingFirstDay(from, to, day)) {\n        this.setState({\n          enteredTo: day\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleResetClick\", () => {\n      const {\n        enteredTo,\n        to,\n        from\n      } = this.state;\n      this.setState({\n        enteredTo: null,\n        from: null,\n        to: null\n      });\n    });\n\n    _defineProperty(this, \"handleDatePicker\", () => {\n      const {\n        activeDatePicker\n      } = this.state;\n      this.setState({\n        activeDatePicker: !activeDatePicker\n      });\n    });\n\n    _defineProperty(this, \"handleCloseDatePicker\", () => {\n      this.setState({\n        activeDatePicker: false\n      });\n    });\n\n    _defineProperty(this, \"handleLocationChange\", locationValue => {\n      this.setState({\n        locationValue\n      });\n    });\n\n    _defineProperty(this, \"handleLocationSelect\", locationValue => {\n      let {\n        latLng\n      } = this.state;\n      geocodeByAddress(locationValue).then(results => getLatLng(results[0])).then(latLng => {\n        this.setState({\n          latLng\n        });\n      }).catch(error => console.error('Error', error));\n      this.setState({\n        locationValue\n      });\n    });\n\n    _defineProperty(this, \"handleSearchEvents\", () => {\n      const {\n        from,\n        enteredTo,\n        events,\n        locationValue,\n        latLng\n      } = this.state;\n      const {\n        eventbriteApiKey,\n        eventbriteLink\n      } = this.props;\n      if (!locationValue) return this.setState({\n        requiredMessage: 'Please enter a location'\n      });\n      this.setState({\n        loading: true\n      });\n\n      if (locationValue && from) {\n        this.setState({\n          requiredMessage: ''\n        });\n        const fromDate = moment(from).format('YYYY-MM-DD');\n        const searchFromDate = `${fromDate}T00:00:01Z`;\n        const toDate = moment(enteredTo).format('YYYY-MM-DD');\n        const searchToDate = `${toDate}T00:00:01Z`;\n        fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&start_date.range_end=${searchToDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=108&token=${eventbriteApiKey}`).then(response => {\n          debugger;\n          return response.json();\n        }).then(data => {\n          this.setState({\n            events: data.events,\n            eventsFilterCopy: data.events,\n            loading: false,\n            selectedFilter: 'All'\n          }, () => {\n            if (data.events === 0) {\n              this.setState({\n                noResultsMessage: 'There are no wellness events in your selected location. PLease choose a different location.'\n              });\n            }\n          });\n        }).catch(error => console.log('Error', error));\n      }\n\n      if (locationValue && !from) {\n        const currentDate = moment().format('YYYY-MM-DD');\n        const searchFromDate = `${currentDate}T00:00:01Z`;\n        fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=108&token=${eventbriteApiKey}`).then(response => {\n          debugger;\n          return response.json();\n        }).then(data => {\n          this.setState({\n            events: data.events,\n            eventsFilterCopy: data.events,\n            loading: false,\n            selectedFilter: 'All'\n          });\n        }).catch(error => console.log('Error', error));\n      }\n    });\n\n    _defineProperty(this, \"handleFilter\", event => {\n      let {\n        eventsFilterCopy\n      } = this.state;\n      const selected = event.currentTarget.value;\n      const totalEvents = eventsFilterCopy;\n\n      if (selected === 'All') {\n        this.setState({\n          events: eventsFilterCopy,\n          selectedFilter: selected\n        });\n      }\n\n      if (selected === 'Free') {\n        let filteredFreeEvents = [];\n        totalEvents.forEach(event => {\n          if (event.is_free === true) {\n            filteredFreeEvents.push(event);\n          }\n        });\n        this.setState({\n          events: filteredFreeEvents,\n          selectedFilter: selected\n        });\n      }\n\n      if (selected === '£££') {\n        let filteredPaidEvents = [];\n        totalEvents.forEach(event => {\n          if (event.is_free === false) {\n            filteredPaidEvents.push(event);\n          }\n        });\n        this.setState({\n          events: filteredPaidEvents,\n          selectedFilter: selected\n        });\n      }\n    });\n\n    this.state = {\n      activeDatePicker: false,\n      city: '',\n      events: [],\n      eventsFilterCopy: [],\n      locationValue: '',\n      enteredTo: null,\n      from: null,\n      latLng: null,\n      loading: false,\n      noResults: false,\n      selectedDates: 'Anytime',\n      selectedFilter: 'All',\n      to: null\n    };\n  }\n\n  render() {\n    const {\n      dateLabel,\n      locationLabel,\n      paragraph,\n      searchButtonText,\n      title\n    } = this.props;\n    const {\n      activeDatePicker,\n      enteredTo,\n      events,\n      from,\n      locationValue,\n      loading,\n      noResultsMessage,\n      requiredMessage,\n      selectedDates\n    } = this.state;\n    const modifiers = {\n      start: from,\n      end: enteredTo\n    };\n    const disabledDays = {\n      before: from\n    };\n    const selectedDays = [from, {\n      from,\n      to: enteredTo\n    }];\n    const today = new Date();\n    return React.createElement(\"div\", {\n      className: \"EventSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_searchFilter\",\n      onClick: this.handleDatePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, dateLabel), React.createElement(\"div\", {\n      className: \"EventSearch_value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, selectedDates)), React.createElement(\"div\", {\n      className: activeDatePicker ? 'EventSearch_datePicker EventSearch_datePicker-active' : 'EventSearch_datePicker',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      className: \"EventSearch_date\",\n      numberOfMonths: 2,\n      fromMonth: from,\n      selectedDays: selectedDays,\n      disabledDays: {\n        before: today\n      },\n      modifiers: modifiers,\n      onDayClick: this.handleDayClick,\n      onDayMouseEnter: this.handleDayMouseEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EventSearch_searchFilter\",\n      onClick: this.handleCloseDatePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, locationLabel), React.createElement(PlacesAutocomplete, {\n      value: locationValue,\n      onChange: this.handleLocationChange,\n      onSelect: this.handleLocationSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"input\", _extends({}, getInputProps({\n      placeholder: 'Anywhere',\n      className: 'EventSearch_value'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EventSearch_locationContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \" Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'EventSearch_suggestion EventSearch_suggestion-active' : 'EventSearch_suggestion';\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, suggestion.description));\n    })))), requiredMessage != '' && React.createElement(\"div\", {\n      className: \"EventSearch_required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, requiredMessage)), React.createElement(\"div\", {\n      className: \"EventSearch_action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"Button EventSearch_button\",\n      onClick: this.handleSearchEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, searchButtonText)))), React.createElement(\"div\", {\n      className: \"EventSearch_resultsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, !noResultsMessage && !loading && events.length === 0 && React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      className: \"EventSearch_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"EventSearch_paragraph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, paragraph)), loading && React.createElement(\"section\", {\n      className: \"EventSearch_loadingContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loadingCardContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_loadingCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-cardTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EventSearch_loadingCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-cardTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EventSearch_loadingCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-cardTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"EventSearch_loading EventSearch_loading-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })))), noResultsMessage && !loading && events.length === 0 && React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      className: \"EventSearch_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"EventSearch_paragraph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, noResultsMessage)), events.length > 0 && !loading && React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      className: \"EventSearch_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, `Wellness Events in ${locationValue}`), React.createElement(\"div\", {\n      className: \"EventSearch_filterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"EventSearch_filter\",\n      value: this.state.selectedFilter,\n      onChange: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"EventSearch_option\",\n      value: \"All\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      className: \"EventSearch_option\",\n      value: \"Free\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Free\"), React.createElement(\"option\", {\n      className: \"EventSearch_option\",\n      value: \"\\xA3\\xA3\\xA3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"\\xA3\\xA3\\xA3\"))), React.createElement(EventsResults, {\n      items: events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nEventSearch.propTypes = propTypes;\nEventSearch.defaultProps = defaultProps;\nexport default EventSearch;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/index.jsx"],"names":["exact","PropTypes","React","Component","DayPicker","DateUtils","moment","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","EventsResults","propTypes","dateLabel","string","eventbriteApiKey","eventbriteLink","locationLabel","paragraph","searchButtonText","title","defaultProps","EventSearch","constructor","props","from","to","day","isBeforeFirstDay","isDayBefore","isRangeSelected","state","handleResetClick","handleSelectingFirstDay","setState","enteredTo","selectedDates","format","activeDatePicker","locationValue","latLng","then","results","catch","error","console","events","requiredMessage","loading","fromDate","searchFromDate","toDate","searchToDate","fetch","lng","lat","response","json","data","eventsFilterCopy","selectedFilter","noResultsMessage","log","currentDate","event","selected","currentTarget","value","totalEvents","filteredFreeEvents","forEach","is_free","push","filteredPaidEvents","city","noResults","render","modifiers","start","end","disabledDays","before","selectedDays","today","Date","handleDatePicker","handleDayClick","handleDayMouseEnter","handleCloseDatePicker","handleLocationChange","handleLocationSelect","getInputProps","suggestions","getSuggestionItemProps","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","handleSearchEvents","length","handleFilter"],"mappings":"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","sourcesContent":["import exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\n\nimport EventsResults from './EventsResults';\n\n// https://react-day-picker.js.org/examples/selected-range-enter\nconst propTypes = {\n  dateLabel: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  locationLabel: PropTypes.string,\n  paragraph: PropTypes.string,\n  searchButtonText: PropTypes.string,\n  title: PropTypes.string,\n}\n\nconst defaultProps = {\n  dateLabel: 'When',\n  // eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteApiKey: '34KC3DZI63QGVN6RGLEA',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/search/?',\n  locationLabel: 'City',\n  paragraph: 'Use the search bar above to find your ideal wellness event.',\n  searchButtonText: 'Search',\n  title: 'Event Search Page',\n}\n\nclass EventSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeDatePicker: false,\n      city: '',\n      events: [],\n      eventsFilterCopy: [],\n      locationValue: '',\n      enteredTo: null,\n      from: null,\n      latLng: null,\n      loading: false,\n      noResults: false,\n      selectedDates: 'Anytime',\n      selectedFilter: 'All',\n      to: null,\n    }\n  }\n\n  handleSelectingFirstDay = (from, to, day) => {\n    const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n    const isRangeSelected = from && to;\n    return !from || isBeforeFirstDay || isRangeSelected;\n  }\n\n\n  handleDayClick = (day) => {\n    const { from, to } = this.state;\n    if (from && to && day >= from && day <= to) {\n      this.handleResetClick();\n      return;\n    }\n    if (this.handleSelectingFirstDay(from, to, day)) {\n      this.setState({\n        from: day,\n        to: null,\n        enteredTo: null,\n      });\n    } else {\n      this.setState({\n        to: day,\n        enteredTo: day,\n        selectedDates: `${moment(from).format('DD/MM/YYYY')} - ${moment(day).format('DD/MM/YYYY')}`,\n      });\n    }\n  }\n\n\n  handleDayMouseEnter = (day) => {\n    let  { from, to } = this.state;\n    if (!this.handleSelectingFirstDay(from, to, day)) {\n      this.setState({\n        enteredTo: day,\n      });\n    }\n  }\n\n\n  handleResetClick = () => {\n    const { enteredTo, to, from } = this.state;\n    this.setState({\n      enteredTo: null,\n      from: null,\n      to: null,\n    });\n  }\n \n\n  handleDatePicker = () => {\n    const { activeDatePicker } = this.state;\n\n    this.setState({ activeDatePicker: !activeDatePicker})\n  }\n\n\n  handleCloseDatePicker = () => {\n    this.setState({ activeDatePicker: false });\n  }\n\n\n  handleLocationChange = (locationValue) => {\n    this.setState({ locationValue });\n  };\n \n\n  handleLocationSelect = (locationValue) => {\n    let { latLng } = this.state;\n\n    geocodeByAddress(locationValue)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        this.setState({latLng})\n      })\n      .catch(error => console.error('Error', error));\n      this.setState({ locationValue});\n  };\n\n\n  handleSearchEvents = () => {\n    const { from, enteredTo, events, locationValue, latLng } = this.state;\n    const { eventbriteApiKey, eventbriteLink } = this.props;\n\n    if (!locationValue) return this.setState({requiredMessage: 'Please enter a location'});\n\n    this.setState({ loading: true })\n\n    if (locationValue && from) {\n      this.setState({requiredMessage: ''});\n\n      const fromDate = moment(from).format('YYYY-MM-DD');\n      const searchFromDate = `${fromDate}T00:00:01Z`;\n\n      const toDate = moment(enteredTo).format('YYYY-MM-DD');\n      const searchToDate = `${toDate}T00:00:01Z`;\n      \n      fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&start_date.range_end=${searchToDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=108&token=${eventbriteApiKey}`)\n      .then(response => {\n        debugger\n        return response.json();\n      }).then(data => {\n        this.setState({\n          events: data.events,\n          eventsFilterCopy: data.events,\n          loading: false,\n          selectedFilter: 'All'\n        }, () => {\n          if (data.events === 0) {\n            this.setState({\n              noResultsMessage: 'There are no wellness events in your selected location. PLease choose a different location.'\n            })\n          }\n        })\n      })\n      .catch(error => console.log('Error', error));\n    }\n\n    if(locationValue && !from) {\n      const currentDate = moment().format('YYYY-MM-DD');\n      const searchFromDate = `${currentDate}T00:00:01Z`;\n\n      fetch(`${eventbriteLink}start_date.range_start=${searchFromDate}&location.longitude=${latLng.lng}&location.latitude=${latLng.lat}&categories=108&token=${eventbriteApiKey}`)\n      .then(response => {\n        debugger\n        return response.json();\n      }).then(data => {\n        this.setState({\n          events: data.events,\n          eventsFilterCopy: data.events,\n          loading: false,\n          selectedFilter: 'All'\n        })\n      })\n      .catch(error => console.log('Error', error));\n    }\n  }\n\n\n  handleFilter = (event) => {\n    let { eventsFilterCopy } = this.state;\n    \n    const selected = event.currentTarget.value;\n    const totalEvents = eventsFilterCopy;\n    \n    if(selected === 'All') {\n      this.setState({\n        events: eventsFilterCopy,\n        selectedFilter: selected\n      })\n    }\n   \n    if(selected === 'Free') {\n      let filteredFreeEvents = [];\n\n      totalEvents.forEach((event) => {\n        if(event.is_free === true) {\n          filteredFreeEvents.push(event)\n        }\n      })\n      this.setState({\n        events: filteredFreeEvents,\n        selectedFilter: selected\n      })\n    }\n\n    if(selected === '£££') {\n      let filteredPaidEvents = [];\n\n      totalEvents.forEach((event) => {\n        if(event.is_free === false) {\n          filteredPaidEvents.push(event)\n        }\n      })\n      this.setState({\n        events: filteredPaidEvents,\n        selectedFilter: selected\n      })\n    }\n  }\n\n\n  render() {\n    const { dateLabel, locationLabel, paragraph, searchButtonText, title } = this.props;\n    const { activeDatePicker, enteredTo, events, from, locationValue, loading, noResultsMessage, requiredMessage, selectedDates } = this.state;\n    const modifiers = { start: from, end: enteredTo };\n    const disabledDays = { before: from };\n    const selectedDays = [from, { from, to: enteredTo }];\n    const today = new Date();\n\n    return (\n      <div className=\"EventSearch\">\n        <div className=\"EventSearch_container\">\n          <div className=\"EventSearch_searchBar\">\n            <div className=\"EventSearch_searchFilter\" onClick={this.handleDatePicker}>\n              <div className=\"EventSearch_label\">\n                {dateLabel}\n              </div>\n              <div className=\"EventSearch_value\">\n                {selectedDates}\n              </div>\n            </div>\n            <div className={activeDatePicker ? 'EventSearch_datePicker EventSearch_datePicker-active' : 'EventSearch_datePicker'}>\n              <DayPicker\n                className=\"EventSearch_date\"\n                numberOfMonths={2}\n                fromMonth={from}\n                selectedDays={selectedDays}\n                disabledDays={{before: today}}\n                modifiers={modifiers}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n              />\n            </div>\n           \n            <div className=\"EventSearch_searchFilter\" onClick={this.handleCloseDatePicker}>\n              <div className=\"EventSearch_label\">\n                {locationLabel}\n              </div>\n\n                <PlacesAutocomplete\n                  value={locationValue}\n                  onChange={this.handleLocationChange}\n                  onSelect={this.handleLocationSelect}\n                >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  <div>\n                    <input\n                      {...getInputProps({\n                        placeholder: 'Anywhere',\n                        className: 'EventSearch_value',\n                      })}\n                    />\n                    <div className=\"EventSearch_locationContainer\">\n                      {loading && <div> Loading...</div>}\n                      {suggestions.map(suggestion => {\n                        const className = suggestion.active ? 'EventSearch_suggestion EventSearch_suggestion-active' : 'EventSearch_suggestion';\n                        const style = suggestion.active ? { backgroundColor: '#fafafa', cursor: 'pointer' } : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {className, style})}\n                          >\n                            <span>\n                              {suggestion.description}\n                            </span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n                </PlacesAutocomplete>\n                {requiredMessage != ''\n                  && (\n                    <div className=\"EventSearch_required\">\n                      {requiredMessage}\n                    </div>\n                  )}\n            </div>\n            <div className=\"EventSearch_action\">\n              <button type=\"button\" className=\"Button EventSearch_button\" onClick={this.handleSearchEvents}>\n                {searchButtonText}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"EventSearch_resultsContainer\">\n          <>\n            {(!noResultsMessage && !loading && events.length === 0)\n              && \n              (\n                <>\n                  <h2 className=\"EventSearch_title\">\n                    {title}\n                  </h2>\n                  <div className=\"EventSearch_paragraph\">\n                    {paragraph}\n                  </div>\n                </>\n              )\n            }\n            {loading\n              && (\n                <section className=\"EventSearch_loadingContent\">\n                  <div className=\"EventSearch_loading EventSearch_loading-title\" />\n\n                  <div className=\"EventSearch_loadingCardContent\">\n                    <div className=\"EventSearch_loadingCard\">\n                      <div className=\"EventSearch_loading EventSearch_loading-image\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-cardTitle\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                    </div>\n                    <div className=\"EventSearch_loadingCard\">\n                      <div className=\"EventSearch_loading EventSearch_loading-image\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-cardTitle\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                    </div>\n                    <div className=\"EventSearch_loadingCard\">\n                      <div className=\"EventSearch_loading EventSearch_loading-image\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-cardTitle\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                      <div className=\"EventSearch_loading EventSearch_loading-info\" />\n                    </div>\n                  </div>\n                </section>\n              )\n            }\n            {(noResultsMessage && !loading && events.length === 0)\n              && (\n                <>\n                  <h2 className=\"EventSearch_title\">\n                    {title}\n                  </h2>\n                  <div className=\"EventSearch_paragraph\">\n                    {noResultsMessage}\n                  </div>\n                </>\n              )\n            }\n            {(events.length > 0 && !loading)\n              && \n                (\n                <>\n                  <h2 className=\"EventSearch_title\">\n                    {`Wellness Events in ${locationValue}`}\n                  </h2>\n                  <div className=\"EventSearch_filterContainer\">\n            \n                      <select className=\"EventSearch_filter\" value={this.state.selectedFilter} onChange={this.handleFilter}>\n                        <option className=\"EventSearch_option\" value='All'>All</option>\n                        <option className=\"EventSearch_option\" value='Free'>Free</option>\n                        <option className=\"EventSearch_option\" value=\"£££\">£££</option>\n                      </select>\n                  \n                  </div>\n                  <EventsResults\n                    items={events}\n                  />\n                </>\n              )\n            }\n          </>\n        </div>\n      </div>\n    )\n  }\n}\n\nEventSearch.propTypes = propTypes;\nEventSearch.defaultProps = defaultProps;\n\nexport default EventSearch;"]},"metadata":{},"sourceType":"module"}