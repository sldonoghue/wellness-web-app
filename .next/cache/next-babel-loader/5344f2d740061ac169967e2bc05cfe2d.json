{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/EventDetails.jsx\";\nimport exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Footer from '../Footer';\nimport moment from 'moment';\nimport '/Users/sarahdonoghue/Documents/Projects/wellness-events-app/assets/scss/style.scss';\nconst propTypes = {\n  buttonText: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  eventId: PropTypes.string,\n  friendsLabel: PropTypes.string,\n  widerNetworkLabel: PropTypes.string\n};\nconst defaultProps = {\n  buttonText: 'Book Now',\n  eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/',\n  friendsLabel: 'Your Friends who are attending the event',\n  widerNetworkLabel: 'People you may know who are attending the event'\n};\n\nclass EventDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fetchEventData\", () => {\n      const {\n        eventbriteApiKey,\n        eventbriteLink,\n        eventId\n      } = this.props;\n      let {\n        eventData\n      } = this.state;\n      fetch(`${eventbriteLink}${eventId}/?expand=venue,ticket_classes,ticket_availability&token=${eventbriteApiKey}`).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          eventData: [data]\n        });\n      }).catch(error => console.log('Error', error));\n    });\n\n    this.state = {\n      eventData: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchEventData(); // this.fetchFriends();\n  }\n\n  // fetchFriends = () => {\n  // Similar to the fetchEventData function above I would use this function to fetch data from facebook api using the event id to gain access to their facebook friends to see if any are attending the events. \n  // Additionally, I would to gain access to their suggested friends to see if they are also attending the event.\n  // I would store the friends data in an array and then map over so I could display each profile picture of the person attending/ineterested in the event\n  // }\n  render() {\n    const {\n      buttonText,\n      friendsLabel,\n      widerNetworkLabel\n    } = this.props;\n    const {\n      eventData\n    } = this.state;\n    let eventPrice = '';\n\n    if (eventData.length != 0) {\n      if (eventData[0].ticket_availability.maximum_ticket_price.value === 0) {\n        eventPrice = 'Free';\n      } else {\n        eventPrice = eventData[0].ticket_availability.maximum_ticket_price.display;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, eventData.length != 0 && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"EventDetails_imageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, eventData[0].logo != null && React.createElement(\"figure\", {\n      className: \"EventDetails_image\",\n      style: {\n        backgroundImage: `url(${eventData[0].logo.url})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EventDetails_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"EventDetails_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, eventData[0].name.text), React.createElement(\"div\", {\n      className: \"EventDetails_eventInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, `Start: ${moment(eventData[0].start.local).format('DD/MM/YYYY HH:mm')}`), React.createElement(\"div\", {\n      className: \"EventDetails_time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, `End: ${moment(eventData[0].end.local).format('DD/MM/YYYY HH:mm')}`)), React.createElement(\"div\", {\n      className: \"EventDetails_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, eventData[0].venue.address.address_1), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, eventData[0].venue.address.city), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, eventData[0].venue.address.postal_code)))), React.createElement(\"div\", {\n      className: \"EventDetails_eventInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, eventData[0].capacity === null && React.createElement(\"div\", {\n      className: \"EventDetails_capacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Please register for the event\"), React.createElement(\"div\", {\n      className: \"EventDetails_price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, eventPrice)), React.createElement(\"div\", {\n      className: \"EventDetails_actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"Button EventDetails_button\",\n      href: eventData[0].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, buttonText))), React.createElement(\"div\", {\n      className: \"EventDetails_description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, eventData[0].description.text), React.createElement(\"div\", {\n      className: \"EventDetails_friendsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_friendsContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_friendTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, friendsLabel), React.createElement(\"ul\", {\n      className: \"EventDetails_friendList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"EventDetails_friendsContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EventDetails_friendTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, widerNetworkLabel), React.createElement(\"ul\", {\n      className: \"EventDetails_friendList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"EventDetails_friendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }));\n  }\n\n}\n\nEventDetails.propTypes = propTypes;\nEventDetails.defaultProps = defaultProps;\nexport default EventDetails;","map":{"version":3,"sources":["/Users/sarahdonoghue/Documents/Projects/wellness-events-app/pages/components/EventSearch/EventDetails.jsx"],"names":["exact","PropTypes","React","Component","Footer","moment","propTypes","buttonText","string","eventbriteApiKey","eventbriteLink","eventId","friendsLabel","widerNetworkLabel","defaultProps","EventDetails","constructor","props","eventData","state","fetch","then","response","json","data","setState","catch","error","console","log","componentDidMount","fetchEventData","render","eventPrice","length","ticket_availability","maximum_ticket_price","value","display","logo","backgroundImage","url","name","text","start","local","format","end","venue","address","address_1","city","postal_code","capacity","description"],"mappings":"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","sourcesContent":["import exact from 'prop-types-exact';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Footer from '../Footer';\nimport moment from 'moment';\nimport '/Users/sarahdonoghue/Documents/Projects/wellness-events-app/assets/scss/style.scss';\n\nconst propTypes = {\n  buttonText: PropTypes.string,\n  eventbriteApiKey: PropTypes.string,\n  eventbriteLink: PropTypes.string,\n  eventId: PropTypes.string,\n  friendsLabel: PropTypes.string,\n  widerNetworkLabel: PropTypes.string,\n}\n\nconst defaultProps = {\n  buttonText: 'Book Now',\n  eventbriteApiKey: 'E3FPRWVRIRN63ML427UJ',\n  eventbriteLink: 'https://www.eventbriteapi.com/v3/events/',\n  friendsLabel: 'Your Friends who are attending the event',\n  widerNetworkLabel: 'People you may know who are attending the event',\n}\n\nclass EventDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      eventData: [],\n    }\n  \n  }\n\n  componentDidMount() {\n    this.fetchEventData();\n    // this.fetchFriends();\n  }\n\n\n  fetchEventData = () => {\n    const { eventbriteApiKey, eventbriteLink, eventId } = this.props;\n    let { eventData } = this.state\n\n    fetch(`${eventbriteLink}${eventId}/?expand=venue,ticket_classes,ticket_availability&token=${eventbriteApiKey}`)\n    .then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({eventData: [data]})\n    })\n    .catch(error => console.log('Error', error));\n  }\n\n  // fetchFriends = () => {\n      // Similar to the fetchEventData function above I would use this function to fetch data from facebook api using the event id to gain access to their facebook friends to see if any are attending the events. \n      // Additionally, I would to gain access to their suggested friends to see if they are also attending the event.\n      // I would store the friends data in an array and then map over so I could display each profile picture of the person attending/ineterested in the event\n  // }\n\n\n  render() {\n    const { buttonText, friendsLabel, widerNetworkLabel } = this.props;\n    const { eventData } = this.state;\n\n    let eventPrice = '';\n    \n    if (eventData.length != 0) {\n      if(eventData[0].ticket_availability.maximum_ticket_price.value === 0) {\n        eventPrice = 'Free'\n      } else {\n        eventPrice = eventData[0].ticket_availability.maximum_ticket_price.display\n      }\n    }\n    \n    return (\n      <React.Fragment>\n        <div className=\"EventDetails\">\n        {eventData.length != 0\n          && (\n            <>\n            <div className=\"EventDetails_imageContainer\">\n              {eventData[0].logo != null\n                && (\n                  <figure className=\"EventDetails_image\" style={{backgroundImage: `url(${eventData[0].logo.url})`}}/>\n                )\n              }\n            </div>\n            <div className=\"EventDetails_content\">\n              <h2 className=\"EventDetails_title\">\n                {eventData[0].name.text}\n              </h2>\n              <div className=\"EventDetails_eventInfo\">\n                <div className=\"EventDetails_info\">\n                  <div className=\"EventDetails_time\">\n                    {`Start: ${moment(eventData[0].start.local).format('DD/MM/YYYY HH:mm')}`}\n                  </div>\n                  <div className=\"EventDetails_time\">\n                    {`End: ${moment(eventData[0].end.local).format('DD/MM/YYYY HH:mm')}`}\n                  </div>\n                </div>\n                <div className=\"EventDetails_info\">\n                  <div className=\"EventDetails_address\">\n                    <span>{eventData[0].venue.address.address_1}</span>\n                    <span>{eventData[0].venue.address.city}</span>\n                    <span>{eventData[0].venue.address.postal_code}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"EventDetails_eventInfo\">\n                <div className=\"EventDetails_info\">\n                  {eventData[0].capacity === null\n                    && (\n                      <div className=\"EventDetails_capacity\">\n                        Please register for the event\n                      </div>\n                    )\n                  }\n                  <div className=\"EventDetails_price\">\n                    {eventPrice}\n                  </div>\n                </div>\n                <div className=\"EventDetails_actions\">\n                  <a className=\"Button EventDetails_button\" href={eventData[0].url}>\n                    {buttonText}\n                  </a>\n                </div>\n              </div>\n              <div className=\"EventDetails_description\">\n                {eventData[0].description.text}\n              </div>\n              <div className=\"EventDetails_friendsContainer\">\n                <div className=\"EventDetails_friendsContent\">\n                  <div className=\"EventDetails_friendTitle\">\n                    {friendsLabel}\n                  </div>\n                  <ul className=\"EventDetails_friendList\">\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                  </ul>\n                </div>\n                <div className=\"EventDetails_friendsContent\">\n                <div className=\"EventDetails_friendTitle\">\n                    {widerNetworkLabel}\n                  </div>\n                  <ul className=\"EventDetails_friendList\">\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                    <li className=\"EventDetails_friendProfile\"></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n              </>\n          )}\n        </div>\n        <Footer />\n      </React.Fragment>\n    )\n  }\n}\n\nEventDetails.propTypes = propTypes;\nEventDetails.defaultProps = defaultProps;\n\nexport default EventDetails;"]},"metadata":{},"sourceType":"module"}